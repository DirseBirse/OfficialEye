# This is the ID of the template. It is needed to identify this template in the API and must be alphanumeric and unique.
id: "passport_ru"
# The name of the template, as should be displayed to the user
name: "Passport RU"
# This is the path to the example document you want to use as a base for the template.
# The path can be absolute or relative. If it is relative, then it will be resolved relative to the location of the current file.
source: "../template_images/passport_ru.jpg"
# A list of keypoints located in the template source image specified above.
# A keypoint is a rectangular region that should be present in all documents of this kind, and that
# should be used to find correspondences between the position of the given image and the positions in the template source image.
keypoints:
  rf_symbol:
    x: 625
    y: 38
    w: 65
    h: 65
    matches:
      min: 2
      max: 20
  photo_bar_top:
    x: 14
    y: 85
    w: 229
    h: 41
    matches:
      min: 5
      max: 20
  photo_bar_left:
    x: 11
    y: 87
    w: 38
    h: 231
    matches:
      min: 5
      max: 20
  h_last_name:
    x: 245
    y: 92
    w: 52
    h: 23
    matches:
      min: 0
      max: 15
  h_name:
    x: 242
    y: 167
    w: 34
    h: 18
    matches:
      min: 0
      max: 10
  h_father_name:
    x: 243
    y: 202
    w: 54
    h: 20
    matches:
      min: 0
      max: 15
  h_sex:
    x: 243
    y: 236
    w: 26
    h: 20
    matches:
      min: 0
      max: 10
  h_birthday:
    x: 359
    y: 226
    w: 55
    h: 31
    matches:
      min: 0
      max: 15
  h_place_of_birth:
    x: 244
    y: 260
    w: 57
    h: 33
    matches:
      min: 0
      max: 15
# Matching configuration
# Matching is the process of finding equal patterns in the given image and the template source image,
# thus establishing correspondences between positions.
# Although better matchings will of course contribute to the stability of the document analysis, it is
# completely fine for a matching algorithm to err in some cases.
matching:
  # Here you can speficy the name of the matching engine that should be used to find correspondences between
  # positions of the given image and those of the template source image provided above.
  # Available engines: sift_flann
  engine: sift_flann
  # Engine-specific configuration
  config:
    # Configuration specific to the `sift_flann` matching engine.
    sift_flann:
      sensitivity: 0.7
# Supervision configuration
# Supervision is the process of unifying the given document image with the template source,
# based on the (partially unreliable) information received from the matching algorithm
supervision:
  # Here you can speficy the name of the supervision engine that should be used to find correspondences between
  # positions of the given image and those of the template source image provided above.
  # Available engines: orthogonal_regression, least_squares_regression, combinatorial
  engine: combinatorial
  config:
    # Here you can speficy engine-specific configurations
    combinatorial:
      # A coefficient between 0 and 1, representing the fraction of matches that should be chosen as the basis for inferring the way the document
      # is positioned in the image provided. The larger the coefficient, the more reliable the superivison result will be.
      # However, increasing this value will also increase the risk of wrongfully not detecting a document at all.
      # If your matching engine produces a lot of false positives, it is recommended to keep this value low, and vice versa.
      min_match_factor: 0.1
      # The combinatorial engine uses an affine linear transformation model to represent the way the document is located in the image provided.
      # It then chooses at least `min_match_factor` * (total amount of matches) matches that cause the data to fit the model, up to the error
      # specified here, measured in pixels along one of the axis. Thus, the lower this value is, the higher will be the quality of the
      # combinatorial supervision engine's output. On the other hand, a very small value may increase
      # the risk of wrongfully not detecting a document at all.
      # Recommended value: between 2 and 10 pixels
      max_transformation_error: 5

  # Since the supervision engine may produce multiple results.
  # This option allows you to specify the strategy that should be used to choose a final result.
  # Available strategies: first, best_mse, best_score
  # The `first` strategy simply returns the first result produced
  # The `random` strategy chooses a random result produced
  # The `best_mse` strategy finds the result which has the lowest mean squared error when translating template points to target points
  # The `best_score` strategy returns the result with the highest score (what `score` represents depends on the supervision engine)
  result: best_score
# A list of features located in the template source image specified above.
# A feature is a rectangular region containing any information of interest, such as text.
# In other words, the corresponding regions in the target image will be found during document analysis.
features:
  last_name_line1:
    type: text
    x: 300
    y: 75
    w: 327
    h: 36
  last_name_line2:
    type: text
    x: 300
    y: 109
    w: 327
    h: 36
  name:
    type: text
    x: 300
    y: 145
    w: 370
    h: 36
  father_name:
    type: text
    x: 300
    y: 180
    w: 370
    h: 36
  sex:
    type: text
    x: 267
    y: 216
    w: 94
    h: 39
  birthday:
    type: text
    x: 413
    y: 215
    w: 256
    h: 40
  place_of_birth_line1:
    type: text
    x: 306
    y: 254
    w: 370
    h: 40
  place_of_birth_line2:
    type: text
    x: 306
    y: 290
    w: 370
    h: 40
  place_of_birth_line3:
    type: text
    x: 306
    y: 326
    w: 370
    h: 40
  mrz_line1:
    type: text
    x: 31
    y: 383
    w: 691
    h: 50
  mrz_line2:
    type: text
    x: 31
    y: 424
    w: 691
    h: 53
  face:
    type: image
    x: 47
    y: 123
    w: 177
    h: 243
    